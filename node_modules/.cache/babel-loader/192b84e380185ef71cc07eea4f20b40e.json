{"ast":null,"code":"var _jsxFileName = \"/Users/yin/Desktop/react-deploy/cecv-reactjs/src/CBECI.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Highcharts from 'highcharts/highstock';\n\nclass CBECI extends Component {\n  componentDidMount() {\n    this.createChart();\n  }\n\n  componentDidUpdate() {\n    this.createChart();\n  }\n\n  createChart() {\n    let estimatedData = [];\n    estimatedData = this.props.estimatedData.map(obj => {\n      const date = obj['Date'].split(\"/\");\n      const dateInSeconds = new Date(\"20\".concat(date[2]), +date[1] - 1, date[0]).getTime();\n      return [dateInSeconds, obj['Estimated Consumption']];\n    }).reverse();\n    let minimumData = [];\n    minimumData = this.props.minimumData.map(obj => {\n      const date = obj['Date'].split(\"/\");\n      const dateInSeconds = new Date(\"20\".concat(date[2]), +date[1] - 1, date[0]).getTime();\n      return [dateInSeconds, obj['Minimum Consumption']];\n    }).reverse();\n    let maximumData = [];\n    maximumData = this.props.maximumData.map(obj => {\n      const date = obj['Date'].split(\"/\");\n      const dateInSeconds = new Date(\"20\".concat(date[2]), +date[1] - 1, date[0]).getTime();\n      return [dateInSeconds, obj['Maximum Consumption']];\n    }).reverse();\n    Highcharts.stockChart('chart', {\n      rangeSelector: {\n        selected: 5\n      },\n      title: {\n        text: this.props.title\n      },\n      yAxis: {\n        title: {\n          text: 'Twh per Year'\n        },\n        tickInterval: 10\n      },\n      plotOptions: {\n        series: {\n          showInNavigator: true,\n          split: true\n        }\n      },\n      series: [{\n        name: 'Estimated Consumption',\n        data: estimatedData,\n        tooltip: {\n          valueDecimals: 5\n        }\n      }, {\n        name: 'Minimum Consumption',\n        data: minimumData,\n        tooltip: {\n          valueDecimals: 5\n        }\n      }, {\n        name: 'Maximum Consumption',\n        data: maximumData,\n        tooltip: {\n          valueDecimals: 5\n        }\n      }],\n      credits: {\n        enabled: false\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Highstock\");\n  }\n\n}\n\nCBECI.propTypes = {\n  data: PropTypes.array,\n  title: PropTypes.string\n};\nexport default CBECI;","map":{"version":3,"sources":["/Users/yin/Desktop/react-deploy/cecv-reactjs/src/CBECI.jsx"],"names":["React","Component","PropTypes","Highcharts","CBECI","componentDidMount","createChart","componentDidUpdate","estimatedData","props","map","obj","date","split","dateInSeconds","Date","getTime","reverse","minimumData","maximumData","stockChart","rangeSelector","selected","title","text","yAxis","tickInterval","plotOptions","series","showInNavigator","name","data","tooltip","valueDecimals","credits","enabled","render","propTypes","array","string"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Highcharts from 'highcharts/highstock';\n\nclass CBECI extends Component {\n\t\n\tcomponentDidMount() {\n\t\tthis.createChart();\n\t}\n\n\tcomponentDidUpdate() {\n    \tthis.createChart();\n  \t}\n\n\tcreateChart() {\n\t\tlet estimatedData = [];\n\t\testimatedData = this.props.estimatedData.map(obj => {\n\t\t\tconst date = obj['Date'].split(\"/\");\n\t\t\tconst dateInSeconds = new Date(`20${date[2]}`, +date[1] - 1, date[0]).getTime();\n\t\t\treturn [dateInSeconds, obj['Estimated Consumption']];\n\t\t}).reverse();\n\n\t\tlet minimumData = [];\n\t\tminimumData = this.props.minimumData.map(obj => {\n\t\t\tconst date = obj['Date'].split(\"/\");\n\t\t\tconst dateInSeconds = new Date(`20${date[2]}`, +date[1] - 1, date[0]).getTime();\n\t\t\treturn [dateInSeconds, obj['Minimum Consumption']];\n        }).reverse();\n        \n        let maximumData = [];\n\t\tmaximumData = this.props.maximumData.map(obj => {\n\t\t\tconst date = obj['Date'].split(\"/\");\n\t\t\tconst dateInSeconds = new Date(`20${date[2]}`, +date[1] - 1, date[0]).getTime();\n\t\t\treturn [dateInSeconds, obj['Maximum Consumption']];\n\t\t}).reverse();\n\n\t\tHighcharts.stockChart('chart', {\n\t\t\trangeSelector: {\n\t\t\t\tselected: 5\n\t\t\t},\n\n\t\t\ttitle: {\n\t\t\t\ttext: this.props.title\n\t\t\t},\n\t\t\tyAxis: {\n                title: {\n                    text: 'Twh per Year'\n\t\t\t\t},\n\t\t\t\ttickInterval: 10\n\t\t\t},\n\t\t\tplotOptions: {\n\t\t\t\tseries: {\n\t\t\t\t\tshowInNavigator: true,\n\t\t\t\t\tsplit: true\n\t\t\t\t}\n\t\t\t},\t\n\t\t\tseries: [{\n\t\t\t\t\tname: 'Estimated Consumption',\n\t\t\t\t\tdata: estimatedData,\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tvalueDecimals: 5\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Minimum Consumption',\n\t\t\t\t\tdata: minimumData,\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tvalueDecimals: 5\n\t\t\t\t\t}\n                }, \n                {\n                    name: 'Maximum Consumption',\n                    data: maximumData,\n                    tooltip: {\n\t\t\t\t\t\tvalueDecimals: 5\n\t\t\t\t\t}\n                }\n            ],\n\t\t\tcredits: {\n\t\t\t\tenabled: false\n\t\t\t}\n    \t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id='chart'>Highstock</div>\n\t\t);\n\t}\n}\n\nCBECI.propTypes = {\n\tdata: PropTypes.array,\n  \ttitle: PropTypes.string\n};\n\nexport default CBECI;"]},"metadata":{},"sourceType":"module"}