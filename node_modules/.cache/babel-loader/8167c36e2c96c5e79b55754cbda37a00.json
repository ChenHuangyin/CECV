{"ast":null,"code":"import _objectSpread from \"/Users/yin/Desktop/2020Fall-bc/react-charts-and-maps/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yin/Desktop/2020Fall-bc/react-charts-and-maps/src/MapWithStops.jsx\";\nimport React, { Component } from 'react';\nimport studentTravel from './data/student-travel';\nimport TableOfBusStops from './TableOfBusStops';\nimport { withGoogleMap, GoogleMap, Marker, Polyline, InfoWindow } from \"react-google-maps\";\nconst InitialMap = withGoogleMap(props => {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 12,\n    defaultCenter: props.center,\n    defaultOptions: {\n      scrollwheel: false,\n      mapTypeControl: false,\n      draggable: true,\n      scaleControl: false,\n      mapTypeId: 'roadmap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.markers.map((marker, index) => React.createElement(Marker, {\n    key: index,\n    position: marker.position,\n    onClick: () => props.onMarkerClick(marker),\n    onMouseOver: () => props.onMarkerHover(marker),\n    onMouseOut: () => props.onMarkerHide(marker),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, marker.showInfo && React.createElement(InfoWindow, {\n    onCloseClick: () => props.onMarkerClose(marker),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"info-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Students: \", marker.infoContent.studentsCount), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Routes: \", marker.infoContent.routesCount))), marker.hover && React.createElement(InfoWindow, {\n    onCloseClick: () => props.onMarkerClose(marker),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"info-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Bus stop: \", React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, marker.infoContent.name)))))), React.createElement(Polyline, {\n    path: props.coords,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n});\n\nclass MapWithStops extends Component {\n  constructor() {\n    super();\n    this.state = {\n      markers: studentTravel.result.map(place => {\n        return {\n          position: {\n            lat: place.lat,\n            lng: place.lng\n          },\n          showInfo: false,\n          infoContent: {\n            name: place.name,\n            studentsCount: place.students_count,\n            routesCount: place.routes_count\n          }\n        };\n      }),\n      coords: studentTravel.result.map(place => {\n        return {\n          lat: place.lat,\n          lng: place.lng\n        };\n      }),\n      showMap: true\n    };\n    this.handleMarkerClick = this.handleMarkerClick.bind(this);\n    this.handleMarkerClose = this.handleMarkerClose.bind(this);\n    this.handleMarkerHover = this.handleMarkerHover.bind(this);\n    this.handleMarkerHide = this.handleMarkerHide.bind(this);\n    this.handleHideMapClick = this.handleHideMapClick.bind(this);\n    this.handleShowMapClick = this.handleShowMapClick.bind(this);\n  }\n\n  handleMarkerClick(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return _objectSpread({}, marker, {\n            showInfo: true,\n            hover: false\n          });\n        }\n\n        return marker;\n      })\n    });\n  }\n\n  handleMarkerClose(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return _objectSpread({}, marker, {\n            showInfo: false,\n            hover: false\n          });\n        }\n\n        return marker;\n      })\n    });\n  }\n\n  handleMarkerHover(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return _objectSpread({}, marker, {\n            hover: true\n          });\n        }\n\n        return marker;\n      })\n    });\n  }\n\n  handleMarkerHide(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return _objectSpread({}, marker, {\n            hover: false\n          });\n        }\n\n        return marker;\n      })\n    });\n  }\n\n  handleHideMapClick() {\n    this.setState({\n      showMap: false\n    });\n  }\n\n  handleShowMapClick() {\n    this.setState({\n      showMap: true\n    });\n  }\n\n  minMaxLatAndLng(studentTravel) {\n    const listOfLat = studentTravel.map(obj => obj.lat);\n    const listOfLng = studentTravel.map(obj => obj.lng);\n    const lat = (Math.min(...listOfLat) + Math.max(...listOfLat)) / 2;\n    const lng = (Math.min(...listOfLng) + Math.max(...listOfLng)) / 2;\n    return {\n      lat,\n      lng\n    };\n  }\n\n  render() {\n    const mapCenter = this.minMaxLatAndLng(studentTravel.result);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, !this.state.showMap && React.createElement(\"button\", {\n      className: \"btn-show-map\",\n      onClick: this.handleShowMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Show map\"), this.state.showMap && React.createElement(\"div\", {\n      className: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn-hide-map\",\n      onClick: this.handleHideMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Hide map\"), React.createElement(InitialMap, {\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }),\n      center: mapCenter,\n      markers: this.state.markers,\n      coords: this.state.coords,\n      onMarkerClick: this.handleMarkerClick,\n      onMarkerClose: this.handleMarkerClose,\n      onMarkerHover: this.handleMarkerHover,\n      onMarkerHide: this.handleMarkerHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(TableOfBusStops, {\n      stopsData: studentTravel.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MapWithStops;","map":{"version":3,"sources":["/Users/yin/Desktop/2020Fall-bc/react-charts-and-maps/src/MapWithStops.jsx"],"names":["React","Component","studentTravel","TableOfBusStops","withGoogleMap","GoogleMap","Marker","Polyline","InfoWindow","InitialMap","props","center","scrollwheel","mapTypeControl","draggable","scaleControl","mapTypeId","markers","map","marker","index","position","onMarkerClick","onMarkerHover","onMarkerHide","showInfo","onMarkerClose","infoContent","studentsCount","routesCount","hover","name","coords","MapWithStops","constructor","state","result","place","lat","lng","students_count","routes_count","showMap","handleMarkerClick","bind","handleMarkerClose","handleMarkerHover","handleMarkerHide","handleHideMapClick","handleShowMapClick","targetMarker","setState","minMaxLatAndLng","listOfLat","obj","listOfLng","Math","min","max","render","mapCenter","height"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport studentTravel from './data/student-travel';\nimport TableOfBusStops from './TableOfBusStops';\nimport { withGoogleMap, GoogleMap, Marker, Polyline, InfoWindow } from \"react-google-maps\";\n\nconst InitialMap = withGoogleMap(props => {\n\treturn (\n\t\t<GoogleMap\n\t\t\tdefaultZoom={12}\n\t\t\tdefaultCenter={props.center}\n\t\t\tdefaultOptions={{\n\t\t\t\tscrollwheel: false,\n\t\t\t\tmapTypeControl: false,\n      \tdraggable: true,\n      \tscaleControl: false,\n\t\t\t\tmapTypeId: 'roadmap'\n\t\t\t}}\n\t\t\t\n\t\t>\n\n\t\t\t{props.markers.map((marker, index) => (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={index}\n\t\t\t\t\tposition={marker.position}\n\t\t\t\t\tonClick={() => props.onMarkerClick(marker)}\n\t\t\t\t\tonMouseOver={() => props.onMarkerHover(marker)}\n\t\t\t\t\tonMouseOut={() => props.onMarkerHide(marker)}\n\t\t\t\t>\n\t\t\t\t\t{marker.showInfo && (\n\t\t\t\t\t\t<InfoWindow onCloseClick={() => props.onMarkerClose(marker)}>\n\t\t\t\t\t\t\t<div id=\"info-window\">\n\t\t\t\t\t\t\t\t<div>Students: {marker.infoContent.studentsCount}</div>\n\t\t\t\t\t\t\t\t<div>Routes: {marker.infoContent.routesCount}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</InfoWindow>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{marker.hover && (\n\t\t\t\t\t\t<InfoWindow\n\t\t\t\t\t\t\tonCloseClick={() => props.onMarkerClose(marker)}>\n\t\t\t\t\t\t\t<div id=\"info-window\">\n\t\t\t\t\t\t\t\t<div>Bus stop: <em>{marker.infoContent.name}</em></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</InfoWindow>\n\t\t\t\t\t)}\n\t\t\t\t</Marker>\n\t\t\t))}\n\t\t\t<Polyline\n\t\t\t\tpath={props.coords}\n\t\t\t/>\n\t\t</GoogleMap>\n\t)\n});\n\nclass MapWithStops extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmarkers: studentTravel.result.map(place => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: { lat: place.lat, lng: place.lng },\n\t\t\t\t\tshowInfo: false,\n\t\t\t\t\tinfoContent: {\n\t\t\t\t\t\tname: place.name,\n\t\t\t\t\t\tstudentsCount: place.students_count,\n\t\t\t\t\t\troutesCount: place.routes_count \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),    \n\t\t\tcoords: studentTravel.result.map(place => {\n\t\t\t\treturn {\n\t\t\t\t\tlat: place.lat, \n\t\t\t\t\tlng: place.lng\n\t\t\t\t}\n\t\t\t}),\n\t\t\tshowMap: true\n\t\t};\n\n\t\tthis.handleMarkerClick = this.handleMarkerClick.bind(this);\n\t\tthis.handleMarkerClose = this.handleMarkerClose.bind(this);\n\t\tthis.handleMarkerHover = this.handleMarkerHover.bind(this);\n\t\tthis.handleMarkerHide = this.handleMarkerHide.bind(this);\n\t\tthis.handleHideMapClick = this.handleHideMapClick.bind(this);\n\t\tthis.handleShowMapClick = this.handleShowMapClick.bind(this);\n\t}\n\t\n\thandleMarkerClick(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return {\n            ...marker,\n            showInfo: true,\n\t\t\t\t\t\thover: false\n          };\n        }\n        return marker;\n      }),\n    });\n  }\n\n\thandleMarkerClose(targetMarker) {\n    this.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return {\n            ...marker,\n            showInfo: false,\n\t\t\t\t\t\thover: false\n          };\n        }\n        return marker;\n      }),\n    });\n  }\n\n\thandleMarkerHover(targetMarker) {\n\t\tthis.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return {\n            ...marker,\n            hover: true\n          };\n        }\n        return marker;\n      }),\n    });\n\t}\n\n\thandleMarkerHide(targetMarker) {\n\t\tthis.setState({\n      markers: this.state.markers.map(marker => {\n        if (marker === targetMarker) {\n          return {\n            ...marker,\n            hover: false\n          };\n        }\n        return marker;\n      }),\n    });\n\t}\n\n\thandleHideMapClick() {\n\t\tthis.setState({ showMap: false });\n\t}\n\n\thandleShowMapClick() {\n\t\tthis.setState({ showMap: true })\n\t}\n\t\n\tminMaxLatAndLng(studentTravel) {\n\t\tconst listOfLat = studentTravel.map(obj => obj.lat);\n\t\tconst listOfLng = studentTravel.map(obj => obj.lng);\n\t\tconst lat = (Math.min(...listOfLat) + Math.max(...listOfLat)) / 2;\n\t\tconst lng = (Math.min(...listOfLng) + Math.max(...listOfLng)) / 2;\n\t\n\t\treturn {lat, lng}\t\n\t}\n\t\n\trender() {\n\t\tconst mapCenter = this.minMaxLatAndLng(studentTravel.result);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{!this.state.showMap && \n\t\t\t\t\t<button className=\"btn-show-map\" onClick={this.handleShowMapClick}>Show map</button>\n\t\t\t\t}\n\t\t\t\t{this.state.showMap &&\n\t\t\t\t\t<div className=\"map\">\n\t\t\t\t\t\t<button className=\"btn-hide-map\" onClick={this.handleHideMapClick}>Hide map</button>\n\t\t\t\t\t\t<InitialMap\n\t\t\t\t\t\t\tcontainerElement={\n\t\t\t\t\t\t\t\t<div style={{ height: `100%` }} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmapElement={\n\t\t\t\t\t\t\t\t<div style={{ height: `100%` }} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcenter={mapCenter}\n\t\t\t\t\t\t\tmarkers={this.state.markers}\n\t\t\t\t\t\t\tcoords={this.state.coords}\n\t\t\t\t\t\t\tonMarkerClick={this.handleMarkerClick}\n\t\t\t\t\t\t\tonMarkerClose={this.handleMarkerClose}\n\t\t\t\t\t\t\tonMarkerHover={this.handleMarkerHover}\n\t\t\t\t\t\t\tonMarkerHide={this.handleMarkerHide}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<TableOfBusStops stopsData={studentTravel.result}/>\n\t\t\t</div>\t\n\t\t);\n\t}\n}\n\nexport default MapWithStops;"]},"metadata":{},"sourceType":"module"}