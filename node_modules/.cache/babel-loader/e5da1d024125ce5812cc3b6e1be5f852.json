{"ast":null,"code":"var _jsxFileName = \"/Users/yin/Desktop/2020Fall-bc/CECV/src/ChartHighstock.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Highcharts from 'highcharts/highstock';\n\nclass LineChart extends Component {\n  componentDidMount() {\n    this.createChart();\n  }\n\n  componentDidUpdate() {\n    this.createChart();\n  }\n\n  createChart() {\n    let formatData = [];\n    formatData = this.props.data.map(obj => {\n      const date = obj['Date'].split(\"/\");\n      const dateInSeconds = new Date(\"20\".concat(date[2]), +date[1] - 1, date[0]).getTime();\n      return [dateInSeconds, obj['Estimated TWh per Year']];\n    }).reverse();\n    Highcharts.stockChart('chart', {\n      rangeSelector: {\n        selected: 1\n      },\n      title: {\n        text: this.props.title\n      },\n      series: [{\n        name: '',\n        data: formatData,\n        tooltip: {\n          valueDecimals: 2\n        }\n      }]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Highstock\");\n  }\n\n}\n\nLineChart.propTypes = {\n  data: PropTypes.array,\n  title: PropTypes.string\n};\nexport default LineChart;","map":{"version":3,"sources":["/Users/yin/Desktop/2020Fall-bc/CECV/src/ChartHighstock.jsx"],"names":["React","Component","PropTypes","Highcharts","LineChart","componentDidMount","createChart","componentDidUpdate","formatData","props","data","map","obj","date","split","dateInSeconds","Date","getTime","reverse","stockChart","rangeSelector","selected","title","text","series","name","tooltip","valueDecimals","render","propTypes","array","string"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAEjCI,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,WAAL;AACA;;AAEDC,EAAAA,kBAAkB,GAAG;AAClB,SAAKD,WAAL;AACD;;AAEFA,EAAAA,WAAW,GAAG;AACb,QAAIE,UAAU,GAAG,EAAjB;AACAA,IAAAA,UAAU,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,GAAG,IAAI;AACvC,YAAMC,IAAI,GAAGD,GAAG,CAAC,MAAD,CAAH,CAAYE,KAAZ,CAAkB,GAAlB,CAAb;AACA,YAAMC,aAAa,GAAG,IAAIC,IAAJ,aAAcH,IAAI,CAAC,CAAD,CAAlB,GAAyB,CAACA,IAAI,CAAC,CAAD,CAAL,GAAW,CAApC,EAAuCA,IAAI,CAAC,CAAD,CAA3C,EAAgDI,OAAhD,EAAtB;AACA,aAAO,CAACF,aAAD,EAAgBH,GAAG,CAAC,wBAAD,CAAnB,CAAP;AACA,KAJY,EAIVM,OAJU,EAAb;AAMAf,IAAAA,UAAU,CAACgB,UAAX,CAAsB,OAAtB,EAA+B;AACzBC,MAAAA,aAAa,EAAE;AACdC,QAAAA,QAAQ,EAAE;AADI,OADU;AAKzBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWa;AADZ,OALkB;AASzBE,MAAAA,MAAM,EAAE,CAAC;AACLC,QAAAA,IAAI,EAAE,EADD;AAELf,QAAAA,IAAI,EAAEF,UAFD;AAGLkB,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE;AADR;AAHJ,OAAD;AATiB,KAA/B;AAiBA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD;AAGA;;AAzCgC;;AA4ClCxB,SAAS,CAACyB,SAAV,GAAsB;AACrBnB,EAAAA,IAAI,EAAER,SAAS,CAAC4B,KADK;AAEpBR,EAAAA,KAAK,EAAEpB,SAAS,CAAC6B;AAFG,CAAtB;AAKA,eAAe3B,SAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Highcharts from 'highcharts/highstock';\n\nclass LineChart extends Component {\n\t\n\tcomponentDidMount() {\n\t\tthis.createChart();\n\t}\n\n\tcomponentDidUpdate() {\n    this.createChart();\n  }\n\n\tcreateChart() {\n\t\tlet formatData = [];\n\t\tformatData = this.props.data.map(obj => {\n\t\t\tconst date = obj['Date'].split(\"/\");\n\t\t\tconst dateInSeconds = new Date(`20${date[2]}`, +date[1] - 1, date[0]).getTime();\n\t\t\treturn [dateInSeconds, obj['Estimated TWh per Year']];\n\t\t}).reverse();\n\n\t\tHighcharts.stockChart('chart', {\n        rangeSelector: {\n        \tselected: 1\n        },\n\n        title: {\n          text: this.props.title\n        },\n\t\t\t\t\n        series: [{\n            name: '',\n            data: formatData,\n            tooltip: {\n              valueDecimals: 2\n            }\n        }]\n    });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id='chart'>Highstock</div>\n\t\t);\n\t}\n}\n\nLineChart.propTypes = {\n\tdata: PropTypes.array,\n  title: PropTypes.string\n};\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}