{"ast":null,"code":"var _jsxFileName = \"/Users/yin/Desktop/2020Fall-bc/CECV/src/ECI.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Highcharts from 'highcharts/highstock';\n\nclass ECI extends Component {\n  componentDidMount() {\n    this.createChart();\n  }\n\n  componentDidUpdate() {\n    this.createChart();\n  }\n\n  createChart() {\n    let estimatedData = [];\n    estimatedData = this.props.estimatedData.map(obj => {\n      const date = obj['Date'].split(\"/\");\n      const dateInSeconds = new Date(\"20\".concat(date[2]), +date[1] - 1, date[0]).getTime();\n      return [dateInSeconds, obj['Estimated TWh per Year']];\n    }).reverse();\n    let minimumData = [];\n    minimumData = this.props.minimumData.map(obj => {\n      const date = obj['Date'].split(\"/\");\n      const dateInSeconds = new Date(\"20\".concat(date[2]), +date[1] - 1, date[0]).getTime();\n      return [dateInSeconds, obj['Minimum TWh per Year']];\n    }).reverse();\n    Highcharts.stockChart('chart', {\n      rangeSelector: {\n        selected: 5\n      },\n      title: {\n        text: this.props.title\n      },\n      plotOptions: {\n        series: {\n          compare: 'value',\n          showInNavigator: false\n        }\n      },\n      series: [{\n        name: 'Estimated TWh per Year',\n        data: estimatedData,\n        tooltip: {\n          valueDecimals: 3\n        }\n      }, {\n        name: 'Minimum TWh per Year',\n        data: minimumData,\n        tooltip: {\n          valueDecimals: 3\n        }\n      }]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Highstock\");\n  }\n\n}\n\nECI.propTypes = {\n  data: PropTypes.array,\n  title: PropTypes.string\n};\nexport default ECI;","map":{"version":3,"sources":["/Users/yin/Desktop/2020Fall-bc/CECV/src/ECI.jsx"],"names":["React","Component","PropTypes","Highcharts","ECI","componentDidMount","createChart","componentDidUpdate","estimatedData","props","map","obj","date","split","dateInSeconds","Date","getTime","reverse","minimumData","stockChart","rangeSelector","selected","title","text","plotOptions","series","compare","showInNavigator","name","data","tooltip","valueDecimals","render","propTypes","array","string"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,sBAA5B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE3BI,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,WAAL;AACA;;AAEDC,EAAAA,kBAAkB,GAAG;AAClB,SAAKD,WAAL;AACD;;AAEFA,EAAAA,WAAW,GAAG;AACb,QAAIE,aAAa,GAAG,EAApB;AACAA,IAAAA,aAAa,GAAG,KAAKC,KAAL,CAAWD,aAAX,CAAyBE,GAAzB,CAA6BC,GAAG,IAAI;AACnD,YAAMC,IAAI,GAAGD,GAAG,CAAC,MAAD,CAAH,CAAYE,KAAZ,CAAkB,GAAlB,CAAb;AACA,YAAMC,aAAa,GAAG,IAAIC,IAAJ,aAAcH,IAAI,CAAC,CAAD,CAAlB,GAAyB,CAACA,IAAI,CAAC,CAAD,CAAL,GAAW,CAApC,EAAuCA,IAAI,CAAC,CAAD,CAA3C,EAAgDI,OAAhD,EAAtB;AACA,aAAO,CAACF,aAAD,EAAgBH,GAAG,CAAC,wBAAD,CAAnB,CAAP;AACA,KAJe,EAIbM,OAJa,EAAhB;AAMA,QAAIC,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,GAAG,KAAKT,KAAL,CAAWS,WAAX,CAAuBR,GAAvB,CAA2BC,GAAG,IAAI;AAC/C,YAAMC,IAAI,GAAGD,GAAG,CAAC,MAAD,CAAH,CAAYE,KAAZ,CAAkB,GAAlB,CAAb;AACA,YAAMC,aAAa,GAAG,IAAIC,IAAJ,aAAcH,IAAI,CAAC,CAAD,CAAlB,GAAyB,CAACA,IAAI,CAAC,CAAD,CAAL,GAAW,CAApC,EAAuCA,IAAI,CAAC,CAAD,CAA3C,EAAgDI,OAAhD,EAAtB;AACA,aAAO,CAACF,aAAD,EAAgBH,GAAG,CAAC,sBAAD,CAAnB,CAAP;AACA,KAJa,EAIXM,OAJW,EAAd;AAMAd,IAAAA,UAAU,CAACgB,UAAX,CAAsB,OAAtB,EAA+B;AACzBC,MAAAA,aAAa,EAAE;AACdC,QAAAA,QAAQ,EAAE;AADI,OADU;AAKzBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWa;AADZ,OALkB;AAQ/BE,MAAAA,WAAW,EAAE;AACHC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE,OADL;AAEJC,UAAAA,eAAe,EAAE;AAFb;AADL,OARkB;AAczBF,MAAAA,MAAM,EAAE,CAAC;AACLG,QAAAA,IAAI,EAAE,wBADD;AAELC,QAAAA,IAAI,EAAErB,aAFD;AAGLsB,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE;AADR;AAHJ,OAAD,EAOd;AACCH,QAAAA,IAAI,EAAE,sBADP;AAEUC,QAAAA,IAAI,EAAEX,WAFhB;AAGUY,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE;AADR;AAHnB,OAPc;AAdiB,KAA/B;AA8BA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD;AAGA;;AA7D0B;;AAgE5B5B,GAAG,CAAC6B,SAAJ,GAAgB;AACfJ,EAAAA,IAAI,EAAE3B,SAAS,CAACgC,KADD;AAEbZ,EAAAA,KAAK,EAAEpB,SAAS,CAACiC;AAFJ,CAAhB;AAKA,eAAe/B,GAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Highcharts from 'highcharts/highstock';\n\nclass ECI extends Component {\n\t\n\tcomponentDidMount() {\n\t\tthis.createChart();\n\t}\n\n\tcomponentDidUpdate() {\n    this.createChart();\n  }\n\n\tcreateChart() {\n\t\tlet estimatedData = [];\n\t\testimatedData = this.props.estimatedData.map(obj => {\n\t\t\tconst date = obj['Date'].split(\"/\");\n\t\t\tconst dateInSeconds = new Date(`20${date[2]}`, +date[1] - 1, date[0]).getTime();\n\t\t\treturn [dateInSeconds, obj['Estimated TWh per Year']];\n\t\t}).reverse();\n\n\t\tlet minimumData = [];\n\t\tminimumData = this.props.minimumData.map(obj => {\n\t\t\tconst date = obj['Date'].split(\"/\");\n\t\t\tconst dateInSeconds = new Date(`20${date[2]}`, +date[1] - 1, date[0]).getTime();\n\t\t\treturn [dateInSeconds, obj['Minimum TWh per Year']];\n\t\t}).reverse();\n\n\t\tHighcharts.stockChart('chart', {\n        rangeSelector: {\n        \tselected: 5\n        },\n\n        title: {\n          text: this.props.title\n\t\t},\n\t\tplotOptions: {\n            series: {\n                compare: 'value',\n                showInNavigator: false\n            }\n        },\t\n        series: [{\n            name: 'Estimated TWh per Year',\n            data: estimatedData,\n            tooltip: {\n              valueDecimals: 3\n            }\n\t\t},\n\t\t{\n\t\t\tname: 'Minimum TWh per Year',\n            data: minimumData,\n            tooltip: {\n              valueDecimals: 3\n            }\n\t\t}\n\t]\n    });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id='chart'>Highstock</div>\n\t\t);\n\t}\n}\n\nECI.propTypes = {\n\tdata: PropTypes.array,\n  \ttitle: PropTypes.string\n};\n\nexport default ECI;"]},"metadata":{},"sourceType":"module"}